Make the chess game with the following basic specifications:

DONE Use abstract classes and methods for simulate the behaviour of chess pieces (heritage and polymorphism).
DONE Use you own List with generic types to implement the deleted piece storage that shows the pieces deleted.
DONE Use a Map to represent the chess board.
DONE Control user input data
DONE Use enum types for the color and shape of the chess pieces.
DONE Highlight cells with the following possible movements.
DONE The game ends when a player kill the king
DONE Use the MVC design pattern.

Extensions (6 .. 10 + 1):
TODO Implement streams to manipulate collections
TODO Implement check function
TODO Implement checkmate function
TODO Implement save the game in a file
    All game
    All movements
TODO Implement castling
TODO Implement network play
TODO Implement the needed unitary tests (JUnit) (those ones student considers as the needed ones)
TODO Implement the way to change the application colors and store them in a file. You can use a Singleton pattern to do it.
Any other additional enhancement
 - Implemented color ui change

TODO LA VAINA DE CONVERTIR EN REINA